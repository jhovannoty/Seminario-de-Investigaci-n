# -*- coding: utf-8 -*-
"""Test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LaAjMlJiuNk2JtqmFL3jKeO3Xv1pgJAv
"""

pip install top2vec

pip install top2vec[sentence_encoders]

pip install top2vec[sentence_transformers]

pip install top2vec[indexing]

import numpy as np
import pandas as pd
from top2vec import Top2Vec

df = pd.read_csv("/content/sample_data/Abstracts_sin_coma.csv")

df

docs = df.ABSTRACTS.tolist()

docs[0]

model = Top2Vec(docs)

model.get_num_topics()

topic_sizes, topic_nums = model.get_topic_sizes()

topic_nums

for topic in topic_nums:
    model.generate_topic_wordcloud(topic)

topic_sizes, topic_nums = model.get_topic_sizes()

topic_sizes

topic_nums

model.topic_words

model.topic_words[0]

docs[3000]

df = pd.read_csv("/content/sample_data/Abstracts_sin_coma_part2.csv")

df

docs = df.ABSTRACTS.tolist()

model = Top2Vec(docs)

model.get_num_topics()

topic_sizes, topic_nums = model.get_topic_sizes()

topic_sizes

topic_nums

model.topic_words

for topic in topic_nums:
    model.generate_topic_wordcloud(topic)

documents, document_scores, document_ids = model.search_documents_by_topic(topic_num=10, num_docs=5)
for doc, score, doc_id in zip(documents, document_scores, document_ids):
    print(f"Document: {doc_id}, Score: {score}")
    print("-----------")
    print(doc)
    print("-----------")
    print()

df = pd.read_csv("/content/sample_data/Abstracts_sin_coma.csv")

df

docs = df.ABSTRACTS.tolist()

model = Top2Vec(docs, speed="learn", workers=8)

model.get_num_topics()

topic_sizes

model.topic_words

for topic in topic_nums:
    model.generate_topic_wordcloud(topic)

model = Top2Vec(docs, workers=4, embedding_model='universal-sentence-encoder')

model.get_num_topics()

topic_sizes

model.topic_words

for topic in topic_nums:
    model.generate_topic_wordcloud(topic)

documents, document_scores, document_ids = model.search_documents_by_topic(topic_num=0, num_docs=5)
for doc, score, doc_id in zip(documents, document_scores, document_ids):
    print(f"Document: {doc_id}, Score: {score}")
    print("-----------")
    print(doc)
    print("-----------")
    print()

